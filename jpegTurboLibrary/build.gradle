/*
 * Copyright (c) 2023.
 *
 * Author: JiangShiCheng
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
}

def mJPEGVersionCode = 1
def mJPEGVersionName = "0.1.0.${mJPEGVersionCode}"

android {
    compileSdk 32

    defaultConfig {
        minSdk 19
        targetSdk 32
        versionCode mJPEGVersionCode
        versionName mJPEGVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task outputJPEGAarTask() {
    File folder = new File("/build/outputs/aar")
    File[] files = folder.exists() ? folder.listFiles() : null
    File target = null
    if (files != null) {
        for (i in 0..<files.length) {
            if (files[i].getName().endsWith("release.aar")) {
                target = files[i]
                break
            }
        }
    }
    if (target != null) {
        def dir = "../outputs/"
        def destFileName = "libJPEG_${mJPEGVersionName}.aar"
        //clear all old files
        File old = new File(dir, destFileName)
        if (old.exists()) {
            old.delete()
        }
        File dest = new File(dir, destFileName)
        target.renameTo(dest)
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}